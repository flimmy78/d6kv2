#ifndef MFCCOMMON_H_
#define MFCCOMMON_H_


static const char * downarrow_xpm[] =
{
	"5 4 2 1",
	" 	c Black",
	".	c None",
	".....",
	"     ",
	".   .",
	".. .."
};

static const char * downarrow_l_xpm[] =
{
	"7 5 2 1",
	" 	c Black",
	".	c None",
	".......",
	"       ",
	".     .",
	"..   ..",
	"... ..."
};

static const char * combo_downarrow_xpm[] =
{
	"5 3 2 1",
	" 	c Black",
	".	c None",
	"     ",
	".   .",
	".. .."
};







/////////////////////////////////////////////////////////////////////////////

static struct
{
	uint32      crRGB;
	const char* crName;

} g_crRGB[]=
{
#if 0
	{c_RGB(0x00,0x00,0x00),"黑色"},
	{c_RGB(0x99,0x33,0x00),"褐色"},
	{c_RGB(0x33,0x33,0x00),"橄榄绿"},
	{c_RGB(0x00,0x33,0x00),"深绿"},
	{c_RGB(0x00,0x33,0x66),"深灰蓝"},
	{c_RGB(0x00,0x00,0x80),"深蓝"},
	{c_RGB(0x33,0x33,0x99),"靛蓝"},
	{c_RGB(0x33,0x33,0x33),"灰度-80%"},

	{c_RGB(0x80,0x00,0x00),"深红"},
	{c_RGB(0xFF,0x66,0x00),"桔黄"},
	{c_RGB(0x80,0x80,0x00),"深黄"},
	{c_RGB(0x00,0x80,0x00),"绿色"},
	{c_RGB(0x00,0x80,0x80),"青色"},
	{c_RGB(0x00,0x00,0xFF),"蓝色"},
	{c_RGB(0x66,0x66,0x99),"蓝-灰"},
	{c_RGB(0x80,0x80,0x80),"灰度-50%"},

	{c_RGB(0xFF,0x00,0x00),"红色"},
	{c_RGB(0xFF,0x99,0x00),"浅桔黄"},
	{c_RGB(0x99,0xCC,0x00),"酸橙色"},
	{c_RGB(0x33,0x99,0x66),"海绿"},
	{c_RGB(0x33,0xCC,0xCC),"宝石蓝"},
	{c_RGB(0x33,0x66,0xFF),"浅蓝"},
	{c_RGB(0x80,0x00,0x80),"紫色"},
	{c_RGB(0x99,0x99,0x99),"灰度-40%"},

	{c_RGB(0xFF,0x00,0xFF),"粉红"},
	{c_RGB(0xFF,0xCC,0x00),"金色"},
	{c_RGB(0xFF,0xFF,0x00),"黄色"},
	{c_RGB(0x00,0xFF,0x00),"鲜绿"},
	{c_RGB(0x00,0xFF,0xFF),"青绿"},
	{c_RGB(0x00,0xCC,0xFF),"天蓝"},
	{c_RGB(0x99,0x33,0x66),"梅红"},
	{c_RGB(0xC0,0xC0,0xC0),"灰度-25%"},

	{c_RGB(0xFF,0x99,0xCC),"玫瑰红"},
	{c_RGB(0xFF,0xCC,0x99),"棕黄"},
	{c_RGB(0xFF,0xFF,0x99),"浅黄"},
	{c_RGB(0xCC,0xFF,0xCC),"浅绿"},
	{c_RGB(0xCC,0xFF,0xFF),"浅青绿"},
	{c_RGB(0x99,0xCC,0xFF),"淡蓝"},
	{c_RGB(0xCC,0x99,0xFF),"淡紫"},
	{c_RGB(0xFF,0xFF,0xFF),"白色"},
#else
	{c_RGB(0xFF,0xFF,0xFF),"白色"},
	{c_RGB(0xFF,0x00,0x00),"红色"},
	{c_RGB(0xFF,0xFF,0x99),"浅黄"},
	{c_RGB(0xFF,0xFF,0x00),"黄色"},
	{c_RGB(0xFF,0xCC,0x99),"棕黄"},
	{c_RGB(0xFF,0xCC,0x00),"金黄"},
	{c_RGB(0xFF,0x99,0xCC),"玫瑰红"},
	{c_RGB(0xFF,0x99,0x00),"浅桔黄"},
	{c_RGB(0xFF,0x66,0x00),"桔黄"},
	{c_RGB(0xFF,0x00,0xFF),"粉红色"},
	{c_RGB(0xD4,0xD0,0xC0),"亮灰色"},
	{c_RGB(0xCC,0xFF,0xFF),"浅青绿"},
	{c_RGB(0xCC,0xFF,0xCC),"浅绿"},
	{c_RGB(0xCC,0x99,0xFF),"淡紫"},
	{c_RGB(0xC0,0xC0,0xC0),"银灰色"},
	{c_RGB(0x99,0xCC,0xFF),"淡蓝"},
	{c_RGB(0x99,0xCC,0x00),"酸橙色"},
	{c_RGB(0x99,0x99,0x99),"浅灰色"},
	{c_RGB(0x99,0x30,0x66),"梅红"},
	{c_RGB(0x80,0x80,0x80),"灰色"},
	{c_RGB(0x80,0x80,0x00),"深黄色"},
	{c_RGB(0x80,0x00,0x80),"紫色"},
	{c_RGB(0x80,0x00,0x00),"深红色"},
	{c_RGB(0x66,0x66,0x99),"灰蓝"},
	{c_RGB(0x40,0x40,0x40),"暗灰色"},
	{c_RGB(0x33,0x99,0x66),"海绿"},
	{c_RGB(0x33,0x66,0xFF),"浅蓝"},
	{c_RGB(0x33,0x66,0xCC),"宝石蓝"},
	{c_RGB(0x33,0x33,0x99),"靛蓝"},
	{c_RGB(0x33,0x33,0x00),"橄榄绿"},
	{c_RGB(0x00,0xFF,0xFF),"蓝绿色"},
	{c_RGB(0x00,0xFF,0x00),"浅绿色"},
	{c_RGB(0x00,0xCC,0xFF),"天蓝"},
	{c_RGB(0x00,0x80,0x80),"深青色"},
	{c_RGB(0x00,0x80,0x00),"绿色"},
	{c_RGB(0x00,0x33,0x66),"深灰蓝"},
	{c_RGB(0x00,0x33,0x00),"深绿色"},
	{c_RGB(0x00,0x00,0xFF),"蓝色"},
	{c_RGB(0x00,0x00,0x80),"深蓝色"},
	{c_RGB(0x00,0x00,0x00),"黑色"},
#endif
};


static const char * tipofday_xpm[] =
{
	"32 32 7 1",
	" 	c None",
	".	c #808000",
	"X	c Yellow",
	"o	c Gray100",
	"O	c Black",
	"+	c Cyan",
	"@	c #c0c0c0",
	"                                ",
	"            .....               ",
	"          ..XXXXX..             ",
	"         .XoXoXoXoX.            ",
	"        .Xooo O oXXXO           ",
	"       .XooooOOOXoXoXO          ",
	"       .oooooOOOoXoXXO          ",
	"      .XoooooOOOXoXoX.O         ",
	"      .Xooooo O oXoXX.O         ",
	"      .oXoooooOoXoXoX.O         ",
	"      .XXXoXoXOXoXoXX.O         ",
	"      .XXoXoXoXoXoXoX.O         ",
	"       OXXXXo O oXXX.O          ",
	"       O.XXoXOOOXoXo.O          ",
	"        O.XXX O XXX.O           ",
	"        +O.XXoXoXo.O+O          ",
	"       +oO.XXXXXXX.Oo+O         ",
	"      +oooO..XXX..Oooo+O        ",
	"     +oooo OO...OOOoooo+O       ",
	"   O+ooooo ooOOO@@Oooooo+O      ",
	"    O+oooo  Oo@@OOOoooo+O       ",
	"     O+oooo oOOO@Ooooo+O        ",
	"      O+ooo  o@@OOooo+O         ",
	"       O+oooOOOOOooo+O          ",
	"        O+oooOOOooo+O           ",
	"         O+ooooooo+O            ",
	"          O+ooooo+O             ",
	"           O+ooo+O              ",
	"            O+o+O               ",
	"             O+O                ",
	"              O                 ",
	"                                "
};






#endif