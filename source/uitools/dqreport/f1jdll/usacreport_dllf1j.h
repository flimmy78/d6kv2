/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class usacreport_dllf1j */

#ifndef _Included_usacreport_dllf1j
#define _Included_usacreport_dllf1j
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: INSTANCE */
/*
 * Class:     usacreport_dllf1j
 * Method:    startdb
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_startdb
  (JNIEnv *, jobject);

/*
 * Class:     usacreport_dllf1j
 * Method:    closedb
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_closedb
  (JNIEnv *, jobject);

/*
 * Class:     usacreport_dllf1j
 * Method:    getenvvar
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_usacreport_dllf1j_getenvvar
  (JNIEnv *, jobject);

/*
 * Class:     usacreport_dllf1j
 * Method:    getTableInfo
 * Signature: ([B[B[[B[I[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_getTableInfo
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jobjectArray, jintArray, jbyteArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    openTableInfo
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_openTableInfo
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    closeTableInfo
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_usacreport_dllf1j_closeTableInfo
  (JNIEnv *, jobject);

/*
 * Class:     usacreport_dllf1j
 * Method:    readdata
 * Signature: ([[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_readdata
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    readRecorders
 * Signature: ([B[B[B[B[B[IZ)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_readRecorders
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jintArray, jboolean);

/*
 * Class:     usacreport_dllf1j
 * Method:    insertARecord
 * Signature: ([[B)I
 */
JNIEXPORT jbyteArray JNICALL Java_usacreport_dllf1j_readRtdbRecorders
(JNIEnv*, jobject, jbyteArray, jbyteArray,jbyteArray);
/*
 * Class:     usacreport_dllf1j
 * Method:    insertARecord
 * Signature: ([[B)I
*/
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_insertARecord
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    updateARecord
 * Signature: ([[B[II)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_updateARecord
  (JNIEnv *, jobject, jobjectArray, jintArray, jint);

/*
 * Class:     usacreport_dllf1j
 * Method:    removeARecord
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_removeARecord
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    reCall
 * Signature: ([[B[[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_reCall
  (JNIEnv *, jobject, jobjectArray, jobjectArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    reloadRtdb
 * Signature: ([[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_reloadRtdb
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    reloadMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_reloadMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     usacreport_dllf1j
 * Method:    sendMsgToFert
 * Signature: (IB[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_sendMsgToFert
  (JNIEnv *, jobject, jint, jbyte, jbyteArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    makeBcp
 * Signature: ([B[B[B[B[BZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_usacreport_dllf1j_makeBcp
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jboolean);

/*
 * Class:     usacreport_dllf1j
 * Method:    NetFileSave
 * Signature: ([B[BII)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_NetFileSave
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jint, jint);

/*
 * Class:     usacreport_dllf1j
 * Method:    ExecuteCmd
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_ExecuteCmd
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    SqlReadRecorder
 * Signature: ([B[BI)D
 */
JNIEXPORT jdouble JNICALL Java_usacreport_dllf1j_SqlReadRecorder
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jint);

/*
 * Class:     usacreport_dllf1j
 * Method:    SqlReadRecorders
 * Signature: ([B[B[I)I
 */
JNIEXPORT jint JNICALL Java_usacreport_dllf1j_SqlReadRecorders
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jintArray);

/*
 * Class:     usacreport_dllf1j
 * Method:    RString
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_usacreport_dllf1j_RString
  (JNIEnv *, jobject);

/*
 * Class:     usacreport_dllf1j
 * Method:    WString
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_usacreport_dllf1j_WString
  (JNIEnv *, jobject, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
